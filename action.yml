name: 'Swift Android Action'
description: 'Cross-compiles a swift package for Android and runs the test cases in an Android emulator'
branding:
  icon: 'target'
  color: 'orange'
inputs:
  swift-version:
    description: 'The version of the Swift toolchain to use'
    required: true
    default: '6.0'
  package-path:
    description: 'The folder where the swift package is checked out'
    required: true
    default: '.'
  swift-build-flags:
    description: 'Additional flags to pass to the swift build command'
    required: true
    default: ''
  swift-test-flags:
    description: 'Additional flags to pass to the swift test command'
    required: true
    default: ''
  android-emulator-options:
    description: 'Options to pass to the Android emulator'
    required: true
    default: '-no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim'
  android-emulator-arch:
    description: 'Architecture for the Android emulator (x86_64 or arm64-v8a)'
    required: true
    # TODO: if macos-13: x86_64, macos-15: arm64-v8a
    default: 'x86_64'
  android-emulator-boot-timeout:
    description: 'Emulator boot timeout in seconds'
    required: true
    default: 600
  run-tests:
    description: 'Whether to run the tests or just the build'
    required: true
    default: 'true'
  android-api-level:
    description: 'The API level of the Android emulator to run against'
    required: true
    default: 29
runs:
  using: "composite"
  steps:
    - name: Cache Homebrew packages
      uses: actions/cache@v4
      with:
        path: ~/Library/Caches/Homebrew
        key: homebrew-packages
    - name: Install Toolchain
      run: brew install skiptools/skip/swift-android-toolchain@${{ inputs.swift-version }}
      shell: bash
    - name: Build Swift package for Android
      run: skip android build --build-tests --package-path ${{ inputs.package-path }} --swift-version ${{ inputs.swift-version }} ${{ inputs.swift-build-flags }}
      shell: bash
    - name: Run Swift tests on Android emulator
      if: ${{ inputs.run-tests == 'true' }}
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ inputs.android-api-level }}
        emulator-boot-timeout: ${{ inputs.android-emulator-boot-timeout }}
        emulator-options: ${{ inputs.android-emulator-options }}
        arch: ${{ inputs.android-emulator-arch }}
        script: skip android test --package-path ${{ inputs.package-path }} --swift-version ${{ inputs.swift-version }} ${{ inputs.swift-build-flags }} ${{ inputs.swift-test-flags }}

