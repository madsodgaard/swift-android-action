name: swift-android-action ci
on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  builds:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-24.04', 'ubuntu-22.04', 'macos-13', 'macos-15']
        swift-version: ['6.0', '6.1']
        #swift-version: ['6.0', '6.1', 'nightly-6.1', '6']
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4
        with:
          path: swift-android-action

      - name: Checkout jpsim/Yams
        uses: actions/checkout@v4
        with:
          repository: jpsim/Yams
          path: jpsim/Yams
      - name: Fix jpsim/Yams for Android
        working-directory: jpsim/Yams
        run: |
          # Android tests that use measure have too high a stddev
          perl -pi -e 's;self.measure ;do ;g' Tests/YamsTests/PerformanceTests.swift
      - name: Test jpsim/Yams
        uses: ./swift-android-action/
        with:
          package-path: jpsim/Yams
          swift-version: ${{ matrix.swift-version }}
          run-tests: ${{ matrix.os != 'macos-15' }} # no tests on macOS ARM
          copy-files: Tests
          test-env: TEST_WORKSPACE=1

      - name: Checkout skiptools/swift-android-native
        uses: actions/checkout@v4
        with:
          repository: skiptools/swift-android-native
          path: skiptools/swift-android-native
      - name: Test skiptools/swift-android-native
        uses: ./swift-android-action/
        with:
          package-path: skiptools/swift-android-native
          swift-version: ${{ matrix.swift-version }}
          run-tests: ${{ matrix.os != 'macos-15' }} # no tests on macOS ARM

      - name: Checkout tayloraswift/swift-png
        uses: actions/checkout@v4
        with:
          repository: tayloraswift/swift-png
          path: tayloraswift/swift-png
      - name: Test tayloraswift/swift-png
        uses: ./swift-android-action/
        with:
          package-path: tayloraswift/swift-png
          swift-version: ${{ matrix.swift-version }}
          build-tests: ${{ matrix.swift-version != '6.0' }} # no Testing in 6.0
          run-tests: ${{ matrix.os != 'macos-15' }} # no tests on macOS ARM
          copy-files: Sources Tests

  toolchain-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-24.04', 'ubuntu-22.04', 'macos-13', 'macos-15']
        swift-version: ['6.0', '6.1']
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4
        with:
          path: swift-android-action

      - name: Setup Toolchain
        id: setup-toolchain
        uses: ./swift-android-action/
        #uses: skiptools/swift-android-action@v2
        with:
          # just set up the toolchain and don't build anything
          build-package: false
          swift-version: ${{ matrix.swift-version }}
      - name: Checkout apple/swift-numerics
        uses: actions/checkout@v4
        with:
          repository: apple/swift-numerics
          path: apple/swift-numerics
      - name: Build Package With Toolchain
        working-directory: apple/swift-numerics
        run: |
          echo "SWIFT COMMAND: ${{ steps.setup-toolchain.outputs.swift-build }}"
          ${{ steps.setup-toolchain.outputs.swift-build }} -c debug
          ls -la .build/${{ steps.setup-toolchain.outputs.swift-sdk }}/debug
          ${{ steps.setup-toolchain.outputs.swift-build }} -c release
          ls -la .build/${{ steps.setup-toolchain.outputs.swift-sdk }}/release

